public class Control {
    private char[][] scheme;
    private int level;
    private int startX, startY, endX, endY;

    public Control(int level) {
        this.level = level;
        generateLevels(); 
    }


    public void generateLevels() {
        if (level == 1) {
            scheme = new char[][] {
                {'P', '♡', '♥', '♥', '♥', '♥', '♥', '♥','♥', '♥', '♥'},
                {'♥', '♡', '♥', '♥', '♥', '♥', '♥', '♥','♥', '♥', '♥'},
                {'♥', '♡', '♥', '♥', '♥', '♥', '♥', '♥','♥', '♥', '♥'},
                {'♥', '♡', '♥', '♥', '♥', '♥', '♥', '♥','♥', '♥', '♥'},
                {'♥', '♡', '♡', '♡', '♥', '♥', '♥', '♥','♥', '♥', '♥'},
                {'♥', '♥', '♥', '♡', '♥', '♥', '♥', '♥','♥', '♥', '♥'},
                {'♥', '♥', '♥', '♡', '♥', '♥', '♥', '♥','♥', '♥', '♥'},
                {'♥', '♥', '♥', '♡', '♥', '♥', '♥', '♥','♥', '♥', '♥'},
                {'♥', '♥', '♥', '♡', '♡', '♡', '♡', '♡','♡', '♡', '♡'},
                {'♥', '♥', '♥', '♥', '♥', '♥', '♥', '♥','♥', '♥', '✖'}
            };
            startX = 0;
            startY = 0;
            endX = 9;
            endY = 10;
        }
        else if (level == 2) {
            scheme = new char[][] {
                {'Я', '♥', '♥', '♥', '♥', '♥', '♥', '♥','♥', '♥', '♥'},
                {'♡', '♥', '♡', '♡', '♡', '♥', '♥', '♥','♥', '♥', '♥'},
                {'♡', '♥', '♡', '♥', '♡', '♥', '♥', '♡','♥', '♥', '♥'},
                {'♡', '♥', '♡', '♥', '♡', '♥', '♥', '♡','♥', '♥', '♥'},
                {'♡', '♥', '♡', '♥', '♡', '♡', '♡', '♡','♥', '♥', '♥'},
                {'♡', '♡', '♡', '♥', '♡', '♥', '♥', '♡','♥', '♥', '♥'},
                {'♥', '♥', '♥', '♥', '♡', '♥', '♥', '♡','♥', '♥', '♥'},
                {'♥', '♥', '♥', '♡', '♡', '♥', '♥', '♡','♥', '♥', '♥'},
                {'♥', '♥', '♥', '♥', '♥', '♥', '♥', '♡','♥', '♥', '♥'},
                {'♥', '♥', '♥', '♥', '♥', '♥', '♥', '♡','♡', '♡', '✖'}
            };
            startX = 0;
            startY = 0;
            endX = 9;
            endY = 10;
        }
        else if (level == 3) {
            scheme = new char[][] {
                {'Я', '♥', '♥', '♥', '♥', '♥', '♥', '♥','♥', '♥', '♥'},
                {'♡', '♡', '♡', '♥', '♡', '♥', '♥', '♥','♥', '♥', '♥'},
                {'♥', '♥', '♡', '♥', '♡', '♥', '♡', '♡','♡', '♡', '♥'},
                {'♥', '♡', '♡', '♡', '♡', '♥', '♡', '♥','♡', '♥', '♥'},
                {'♥', '♥', '♥', '♥', '♡', '♥', '♡', '♥','♡', '♥', '♥'},
                {'♥', '♥', '♥', '♥', '♡', '♥', '♡', '♥','♡', '♥', '♥'},
                {'♥', '♥', '♥', '♥', '♡', '♥', '♡', '♥','♡', '♡', '♡'},
                {'♥', '♥', '♡', '♡', '♡', '♡', '♡', '♥','♥', '♡', '♥'},
                {'♥', '♥', '♥', '♥', '♥', '♥', '♥', '♥','♥', '♡', '♥'},
                {'♥', '♥', '♥', '♥', '♥', '♥', '♥', '♥','♥', '♡', '✖'}
            };
            startX = 0;
            startY = 0;
            endX = 9;
            endY = 10;
        }
    }

  
    public void displayControl(int currentX, int currentY) {
        for (int i = 0; i < scheme.length; i++) {
            for (int j = 0; j < scheme[i].length; j++) {
                if (i == currentX && j == currentY) {
                    System.out.print('Я');
                } else {
                    System.out.print(scheme[i][j]); 
                }
            }
            System.out.println();
        }
    }

    public boolean isValidMove(int x, int y) {
        if (x < 0 || y < 0 || y >= scheme[0].length) {
            return false; 
        }
        return scheme[x][y] != '♥';
    }


    public int getStartX() {
        return startX;
    }

    public int getStartY() {
        return startY;
    }
    public int getEndX() {
        return endX;
    }

    public int getEndY() {
        return endY;
    }
}